# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2025-08-15 11:11+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: =head1
#: ../dgit.1:3 ../dgit.7:2 ../dgit-user.7.pod:1 ../dgit-nmu-simple.7.pod:1
#: ../dgit-maint-native.7.pod:1 ../dgit-maint-merge.7.pod:1
#: ../dgit-maint-gbp.7.pod:1 ../dgit-maint-debrebase.7.pod:1
#: ../dgit-downstream-dsc.7.pod:1 ../dgit-sponsorship.7.pod:1
#: ../dgit-maint-bpo.7.pod:1 ../git-debrebase.1.pod:1 ../git-debrebase.5.pod:1
#: ../git-debpush.1.pod:1 ../git-deborig.1.pod:1 ../tag2upload.5.pod:1
#, no-wrap
msgid "NAME"
msgstr ""

#. type: =head1
#: ../dgit.1:1890 ../dgit.7:23 ../dgit-user.7.pod:446
#: ../dgit-nmu-simple.7.pod:158 ../dgit-maint-native.7.pod:125
#: ../dgit-maint-merge.7.pod:509 ../dgit-maint-gbp.7.pod:139
#: ../dgit-maint-debrebase.7.pod:792 ../dgit-downstream-dsc.7.pod:352
#: ../dgit-sponsorship.7.pod:326 ../dgit-maint-bpo.7.pod:140
#: ../git-debrebase.1.pod:629 ../git-debrebase.5.pod:677
#: ../git-debpush.1.pod:341 ../git-deborig.1.pod:60 ../tag2upload.5.pod:307
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: =head1
#: ../dgit.7:4 ../dgit-user.7.pod:27 ../dgit-nmu-simple.7.pod:35
#, no-wrap
msgid "SUMMARY"
msgstr ""

#. type: textblock
#: ../dgit-nmu-simple.7.pod:3
msgid "dgit-nmu-simple - tutorial for DDs wanting to NMU with git"
msgstr ""

#. type: =head1
#: ../dgit-nmu-simple.7.pod:5 ../dgit-sponsorship.7.pod:5
msgid "INTRODUCTION AND SCOPE"
msgstr ""

#. type: textblock
#: ../dgit-nmu-simple.7.pod:7
msgid ""
"This tutorial describes how a Debian Developer can do a straightforward NMU "
"of a package in Debian, using dgit."
msgstr ""

#. type: textblock
#: ../dgit-nmu-simple.7.pod:11
msgid ""
"This document won't help you decide whether an NMU is a good idea or whether "
"it be well received.  The Debian Developers' Reference has some (sometimes "
"questionable) guidance on this."
msgstr ""

#. type: textblock
#: ../dgit-nmu-simple.7.pod:17
msgid ""
"Conversely, you do not need to know anything about the usual maintainer's "
"git workflow.  If appropriate, you can work on many different packages, "
"making similar changes, without worrying about the individual maintainers' "
"git practices."
msgstr ""

#. type: textblock
#: ../dgit-nmu-simple.7.pod:23
msgid ""
"This tutorial only covers changes which can sensibly be expressed as a "
"reasonably small number of linear commits (whether to Debian packaging or to "
"upstream files or both)."
msgstr ""

#. type: textblock
#: ../dgit-nmu-simple.7.pod:28
msgid ""
"If you want to do a new upstream version, you probably want to do as the "
"maintainer would have done.  You'll need to find out what the maintainer's "
"git practices are and consult the appropriate C<dgit-maint-*(7)> workflow "
"tutorial,"
msgstr ""

#. type: verbatim
#: ../dgit-nmu-simple.7.pod:39
#, no-wrap
msgid ""
"    % dgit clone glibc bookworm\n"
"    % cd glibc\n"
"    % git am ~/glibc-security-fix.diff\n"
"    % dch --nmu \"Apply upstream's fix for foo bug.\"\n"
"    % git add debian/changelog && git commit -m\"NMU changelog entry\"\n"
"    % dpkg-buildpackage -uc -b\n"
"    [ run your tests ]\n"
"    % dch -r && git add debian/changelog && git commit -m\"Finalise NMU\"\n"
"    % dgit -wgf sbuild -A -d trixie\n"
"    [ any final tests on generated .debs ]\n"
"    % dgit -wgf [--delayed=5] push-source bookworm\n"
"    [ enter your gnupg passphrase as prompted ]\n"
"    [ see that push and upload are successful ]\n"
"    [ prepare and email NMU diff (git-diff, git-format-patch) ]\n"
"\n"
msgstr ""

#. type: =head1
#: ../dgit-nmu-simple.7.pod:56
msgid "WHAT KIND OF CHANGES AND COMMITS TO MAKE"
msgstr ""

#. type: textblock
#: ../dgit-nmu-simple.7.pod:58
msgid ""
"When preparing an NMU, the git commits you make on the dgit branch should be "
"simple linear series of commits with good commit messages.  The commit "
"messages will be published in various ways, including perhaps being used as "
"the cover messages for generated quilt patches."
msgstr ""

#. type: textblock
#: ../dgit-nmu-simple.7.pod:64
msgid ""
"Do not make merge commits.  Do not try to rebase to drop existing patches - "
"if you need to revert a change which is actually a Debian patch, use git-"
"revert."
msgstr ""

#. type: textblock
#: ../dgit-nmu-simple.7.pod:69
msgid ""
"If you need to modify a Debian patch, make a new commit which fixes what "
"needs fixing, and explain in the commit message which patch it should be "
"squashed with (perhaps by use of a commit message in C<git rebase --"
"autosquash -i> format)."
msgstr ""

#. type: textblock
#: ../dgit-nmu-simple.7.pod:76
msgid ""
"(Of course if you have specific instructions from the maintainer, you can "
"follow those instead.  But the procedure in this tutorial is legitimate for "
"any maintainer, in the sense that it should generate an upload to which the "
"maintainer cannot reasonably object.)"
msgstr ""

#. type: =head1
#: ../dgit-nmu-simple.7.pod:82
msgid "PREPARING AND REVISING THE LOCAL BRANCH"
msgstr ""

#. type: textblock
#: ../dgit-nmu-simple.7.pod:84
msgid ""
"The dgit/sid branch is a normal local git branch tracking a (synthetic) "
"upstream branch.  So you can freely rewrite any commits that you have made "
"locally and haven't pushed anywhere, as normal,"
msgstr ""

#. type: textblock
#: ../dgit-nmu-simple.7.pod:90
msgid ""
"The one thing that's weird is the \"quilt fixup\" commits (that turn up if "
"you do eg dgit sbuild).  If you're rebasing them at all, you can and should "
"just drop them; dgit will then regenerate them as needed."
msgstr ""

#. type: textblock
#: ../dgit-nmu-simple.7.pod:95
msgid "All of this follows from one underlying fact:"
msgstr ""

#. type: textblock
#: ../dgit-nmu-simple.7.pod:97
msgid ""
"dgit doesn't have invisible git state somewhere.  So if you rebase away the "
"quilt fixup, and rework your branch, your branch is still good because it "
"looks just like it would do, if you'd just made those commits straight off.  "
"(NB git-debrebase B<does> have weird off-branch state.)"
msgstr ""

#. type: =head1
#: ../dgit-nmu-simple.7.pod:103
msgid "RELEVANT BRANCHES"
msgstr ""

#. type: textblock
#: ../dgit-nmu-simple.7.pod:105
msgid ""
"dgit clone will put you on a branch like C<dgit/sid>.  There is a pseudo-"
"remote called C<dgit> which also contains a branch like C<dgit/sid>, so you "
"do things like C<git diff dgit/dgit/sid> to see what changes you have made."
msgstr ""

#. type: =head1
#: ../dgit-nmu-simple.7.pod:111
msgid "KEEPING YOUR WORKING TREE TIDY"
msgstr ""

#. type: textblock
#: ../dgit-nmu-simple.7.pod:113
msgid ""
"Don't forget to C<git add> any new files you create.  Otherwise git clean "
"(which is requested with the C<-wgf> option in the recipe above)  will "
"delete them."
msgstr ""

#. type: textblock
#: ../dgit-nmu-simple.7.pod:118
msgid ""
"Many package builds leave dirty git trees.  So, commit before building.  "
"That way you can use C<git reset --hard>."
msgstr ""

#. type: textblock
#: ../dgit-nmu-simple.7.pod:122
msgid ""
"If you follow this approach you don't need to care about the build dirtying "
"the tree.  It also means you don't care about the package clean target, "
"which is just as well because many package clean targets are broken."
msgstr ""

#. type: =head1
#: ../dgit-nmu-simple.7.pod:128
msgid "OTHER GIT BRANCHES"
msgstr ""

#. type: textblock
#: ../dgit-nmu-simple.7.pod:130
msgid ""
"The dgit git history (visible in gitk and git log)  is not necessarily "
"related to the maintainer's or upstream's git history (if any)."
msgstr ""

#. type: textblock
#: ../dgit-nmu-simple.7.pod:135
msgid ""
"If the maintainer has advertised a git repo with Vcs-Git dgit will set up a "
"remote for it, so you can do"
msgstr ""

#. type: verbatim
#: ../dgit-nmu-simple.7.pod:142
#, no-wrap
msgid ""
"    % git fetch vcs-git\n"
"\n"
msgstr ""

#. type: textblock
#: ../dgit-nmu-simple.7.pod:146
msgid ""
"You can cherry pick changes from there, for example.  Note that the "
"maintainer's git history may not be suitable for use with dgit.  For "
"example, it might be a patches-unapplied branch or even contain only a "
"debian/ directory."
msgstr ""

#. type: =head1
#: ../dgit-nmu-simple.7.pod:152
msgid "UPLOADING TO DELAYED"
msgstr ""

#. type: textblock
#: ../dgit-nmu-simple.7.pod:154
msgid ""
"You can use dgit's I<--delayed> option to upload to the DELAYED queue.  "
"However, you should read the warning about this option in dgit(1)."
msgstr ""

#. type: textblock
#: ../dgit-nmu-simple.7.pod:160
msgid "dgit(1), dgit(7), dgit-maint-*(7)"
msgstr ""
